.buttons {
  display: flex;
  gap: 60px;
}
.close {
  &:hover {
    filter: brightness(1.5);
  }
}
.back {
  transition: $transition;
  position: fixed;
  left: 0;
  right: 0;
  margin: auto;
  top: 40px;
  z-index: 999;
  display: inline-block;
  text-align: center;
  padding: 0 120px;
  max-width: $max-width;
  width: fit-content;
  .btn-arrow {
    position: absolute !important;
    right: unset !important;
    left: -25px;
    bottom: 1.5px !important;
    @include transform(rotate(180deg));
  }
}
.anchor {
  .btn-arrow {
    @include transform(rotate(90deg))
  }
}
.red .back {
  .btn {
    color: $white;
  }
}
.hover {
  transition: $transition;
  &:hover {
    opacity: .5;
    @include transform(translate3d(0,-1px,0));
  }
}
.btn {
  gap: 8px;
  width: fit-content;
  position: relative;
  display: inline-flex;
  align-items: center;
  cursor: pointer !important;
  font-size: .9rem;
  font-weight: 600;
  color: $black;
  transition: $transition;
  border: none;
  white-space: nowrap;
  &.icon {
    padding: 21px;
    // border: 1px solid $grey;
    @include flex-center;
    border-radius: $btn-radius;
    background: $white;
  }
  // arrows that are to the right of text on all buttons
  .btn-arrow {
    position: relative;
    bottom: -.5px;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: 16px;
    height: 14px;
    background-size: contain;
    background-repeat: no-repeat;
    overflow: hidden;
    svg {
      position: absolute;
      transition: $transition;
      &:first-of-type {
          @include transform(
              translate3d(0, 0, 0)
          );
      }
      &:last-of-type {
          @include transform(
              translate3d(-115%, 0, 0)
          );
      }
      * {
        stroke: $white;
      }
      &.red-arrow * {
        stroke: $red;
      }
      &.white-arrow * {
        stroke: $white;
      }
      &.black-arrow * {
        stroke: $black;
      }
    }
  }
  &:hover {
    svg {
      &:first-of-type {
        @include transform(
              translate3d(115%, 0, 0)
          );
      }
      &:last-of-type {
        @include transform(
              translate3d(0, 0, 0)
          );
      }
    }
  }
}

// arrows that are used for carousels
.arrows {
  border-radius: $btn-radius;
  display: flex;
  .arrow-prev {
    border-radius: $btn-radius 0 0 $btn-radius;
  }
  .arrow-next {
    border-radius: 0 $btn-radius $btn-radius 0;
  }
}
.arrow {
  .btn-arrow {
      right: unset;
      bottom: unset;
  }
  &.dark {
    background-color: $white;
    svg {
      fill: $red;
    }
  }
  &.arrow-prev svg {
      &:first-of-type {
          @include transform(
              translate3d(0, 0, 0),
              rotate(180deg)
          );
      }
      &:last-of-type {
          @include transform(
              translate3d(115%, 0, 0),
              rotate(180deg)
          );
      }
  }
  &.arrow-next svg {
      &:first-of-type {
          @include transform(
              translate3d(0, 0, 0)
          );
      }
      &:last-of-type {
          @include transform(
              translate3d(-115%, 0, 0)
          );
      }
  }
  &:hover {
      &.arrow-prev svg {
          &:first-of-type {
              @include transform(
                  translate3d(-115%, 0, 0),
                  rotate(180deg)
              );
          }
          &:last-of-type {
              @include transform(
                  translate3d(0, 0, 0),
                  rotate(180deg)
              );
          }
      }
      &.arrow-next svg {
          &:first-of-type {
              @include transform(
                  translate3d(115%, 0, 0)
              );
          }
          &:last-of-type {
              @include transform(
                  translate3d(0, 0, 0)
              );
          }
      }
  }
  &.disabled {
    opacity: 0;
  }
}

@include respond-to-max($desktop) {
  .btn {
    &.icon {
      padding: 17px;
      &:not(.arrow) {
        margin: 0 -.5px;
      }
    }

  }
  .buttons {
    gap: 40px;
  }
}
@include respond-to-max($tablet) {
  .btn {
    font-size: .85rem;
  }
}
@include respond-to-max($mobile) {
  .back {
    display: none !important;
  }
}